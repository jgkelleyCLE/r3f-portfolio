/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/Skeleton_Warrior.glb -o src/FiberComponents/Characters/WarriorSkeleton/WarriorSkeleton.jsx -r public 
*/

import React, { useEffect } from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function WarriorSkeleton(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('/models/Skeleton_Warrior.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)

  console.log(actions)

  useEffect(() => {
          // Stop all current animations
          Object.values(actions).forEach(action => action.stop())
          
          // Play the requested animation if it exists
          if (actions[props.animation]) {
            actions[props.animation].play()
            actions[props.animation].reset().fadeIn(0.2)
          } else {
            console.warn(`Animation "${props.animation}" not found in model`)
          }
          
          return () => {
            // Cleanup: fade out current animation on unmount or animation change
            if (actions[props.animation]) {
              actions[props.animation].fadeOut(0.2)
            }
          }
        }, [props.animation, actions])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Rig">
          <primitive object={nodes.root} />
          <skinnedMesh name="Skeleton_Warrior_ArmLeft" geometry={nodes.Skeleton_Warrior_ArmLeft.geometry} material={materials.skeleton} skeleton={nodes.Skeleton_Warrior_ArmLeft.skeleton} />
          <skinnedMesh name="Skeleton_Warrior_ArmRight" geometry={nodes.Skeleton_Warrior_ArmRight.geometry} material={materials.skeleton} skeleton={nodes.Skeleton_Warrior_ArmRight.skeleton} />
          <skinnedMesh name="Skeleton_Warrior_Body" geometry={nodes.Skeleton_Warrior_Body.geometry} material={materials.skeleton} skeleton={nodes.Skeleton_Warrior_Body.skeleton} />
          <skinnedMesh name="Skeleton_Warrior_Cloak" geometry={nodes.Skeleton_Warrior_Cloak.geometry} material={materials.skeleton} skeleton={nodes.Skeleton_Warrior_Cloak.skeleton} />
          <skinnedMesh name="Skeleton_Warrior_Eyes" geometry={nodes.Skeleton_Warrior_Eyes.geometry} material={materials.Glow} skeleton={nodes.Skeleton_Warrior_Eyes.skeleton} />
          <skinnedMesh name="Skeleton_Warrior_Head" geometry={nodes.Skeleton_Warrior_Head.geometry} material={materials.skeleton} skeleton={nodes.Skeleton_Warrior_Head.skeleton} />
          <skinnedMesh name="Skeleton_Warrior_Jaw" geometry={nodes.Skeleton_Warrior_Jaw.geometry} material={materials.skeleton} skeleton={nodes.Skeleton_Warrior_Jaw.skeleton} />
          <skinnedMesh name="Skeleton_Warrior_LegLeft" geometry={nodes.Skeleton_Warrior_LegLeft.geometry} material={materials.skeleton} skeleton={nodes.Skeleton_Warrior_LegLeft.skeleton} />
          <skinnedMesh name="Skeleton_Warrior_LegRight" geometry={nodes.Skeleton_Warrior_LegRight.geometry} material={materials.skeleton} skeleton={nodes.Skeleton_Warrior_LegRight.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/Skeleton_Warrior.glb')
